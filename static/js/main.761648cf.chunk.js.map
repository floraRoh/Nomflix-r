{"version":3,"sources":["assets/images/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header/Header.js","Components/Header/index.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","prototype","PropTypes","string","isRequired","oneOfType","arrayOf","node","Loader","Text","props","color","Error","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","star","isMovie","to","require","role","aria-label","length","substring","HomePresenter","nowPlaying","upComing","popular","error","loading","Helmet","map","movie","original_title","poster_path","vote_average","release_date","Message","api","axios","create","baseURL","params","api_key","language","get","movieApi","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","tv","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","console","log","HeaderWrap","header","List","ul","Item","li","current","SLink","Link","withRouter","Header","pathname","location","BackDrop","bgImg","Cover","Content","Data","OverView","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","vote_count","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","basename","path","exact","component","Home","Search","TV","Detail","from","GlobalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6GAAA,OAAe,cAA0B,2C,+LCInCA,EAAYC,IAAOC,IAAV,wIAQTC,EAAQF,IAAOG,KAAV,wFAMLC,EAAOJ,IAAOC,IAAV,uNAUJI,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,eAACR,EAAD,WACE,cAACG,EAAD,UAAQI,IACR,cAACF,EAAD,UAAOG,QAIXF,EAAQG,UAAY,CAClBF,MAAOG,IAAUC,OAAOC,WACxBJ,SAAUE,IAAUG,UAAU,CAACH,IAAUI,QAAQJ,IAAUK,MAAOL,IAAUK,QAG/DT,I,oBAAAA,ICrCTN,EAAYC,IAAOC,IAAV,qIAUAc,EAFA,kBAAM,cAAC,EAAD,0BCPfhB,EAAYC,IAAOC,IAAV,uIAQTe,EAAOhB,IAAOG,KAAV,gEAEC,SAAAc,GAAK,OAAIA,EAAMC,SAaXC,EAVD,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMF,EAAT,EAASA,MAAT,OACZ,cAAC,EAAD,UACE,cAACF,EAAD,CAAME,MAAOA,EAAb,SAAqBE,OCdnBrB,EAAYC,IAAOC,IAAV,gDAIToB,EAAQrB,IAAOC,IAAV,gQACe,SAACgB,GAAD,OAAWA,EAAMK,SASrCC,EAASvB,IAAOG,KAAV,qIAQNqB,EAAiBxB,IAAOC,IAAV,gJAGdoB,EAGAE,GAMArB,EAAQF,IAAOG,KAAV,sEAILsB,EAAOzB,IAAOG,KAAV,gEAmCKuB,EA/BA,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,SAAUtB,EAAjB,EAAiBA,MAAOuB,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,KAAhC,KAAsCC,KAAtC,EAA4CC,gBAA5C,gBACb,cAAC,IAAD,CAAMC,GAAID,EAAO,iBAAaL,GAAb,cAA2BA,GAA5C,SACE,eAAC,EAAD,WACE,eAACH,EAAD,WACE,cAACH,EAAD,CACEC,MACEM,EAAQ,yCAAqCA,GAAaM,EAAQ,MAGtE,eAACX,EAAD,WACE,sBAAMY,KAAK,MAAMC,aAAW,SAA5B,oBAGCP,EAJH,cAOF,cAAC,EAAD,UAAQvB,EAAM+B,OAAS,GAAf,UAAuB/B,EAAMgC,UAAU,EAAG,IAA1C,OAAqDhC,IAC7D,cAACmB,EAAD,UAAOK,U,QCvDP/B,EAAYC,IAAOC,IAAV,gDAwEAsC,EArEO,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,QAASC,EAAlC,EAAkCA,MAAOC,EAAzC,EAAyCA,QAAzC,OACpB,qCACG,IACD,cAACC,EAAA,EAAD,UACE,yDAEDD,EACC,cAAC,EAAD,IAEA,eAAC,EAAD,WACGJ,GAAcA,EAAWH,OAAS,GACjC,cAAC,EAAD,CAAS/B,MAAM,cAAf,SACGkC,EAAWM,KAAI,SAACC,GAAD,OACd,cAAC,EAAD,CAEEpB,GAAIoB,EAAMpB,GACVrB,MAAOyC,EAAMC,eACbpB,SAAUmB,EAAME,YAChBpB,OAAQkB,EAAMG,aACdpB,KAAMiB,EAAMI,cAAgBJ,EAAMI,aAAab,UAAU,EAAG,GAC5DN,SAAS,GANJe,EAAMpB,SAWlBc,GAAYA,EAASJ,OAAS,GAC7B,cAAC,EAAD,CAAS/B,MAAM,WAAf,SACGmC,EAASK,KAAI,SAACC,GAAD,OACZ,cAAC,EAAD,CAEEpB,GAAIoB,EAAMpB,GACVrB,MAAOyC,EAAMC,eACbpB,SAAUmB,EAAME,YAChBpB,OAAQkB,EAAMG,aACdpB,KAAMiB,EAAMI,cAAgBJ,EAAMI,aAAab,UAAU,EAAG,GAC5DN,SAAS,GANJe,EAAMpB,SAWlBe,GAAWA,EAAQL,OAAS,GAC3B,cAAC,EAAD,CAAS/B,MAAM,UAAf,SACGoC,EAAQI,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,CAEEpB,GAAIoB,EAAMpB,GACVrB,MAAOyC,EAAMC,eACbpB,SAAUmB,EAAME,YAChBpB,OAAQkB,EAAMG,aACdpB,KAAMiB,EAAMI,cAAgBJ,EAAMI,aAAab,UAAU,EAAG,GAC5DN,SAAS,GANJe,EAAMpB,SAWlBgB,GAAS,cAACS,EAAD,CAASlC,MAAM,UAAUE,KAAMuB,W,SChE3CU,G,QAAMC,EAAMC,OAAO,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QAAU,mCACVC,SAAU,WAIdN,GAAIO,IAAI,cAED,I,wBAAMC,GACE,kBAAMR,GAAIO,IAAI,sBADhBC,GAEA,kBAAMR,GAAIO,IAAI,mBAFdC,GAGD,kBAAMR,GAAIO,IAAI,kBAHbC,GAIE,SAAAlC,GAAE,OAAI0B,GAAIO,IAAJ,gBAAiBjC,GAAK,CACvC8B,OAAQ,CACNK,mBAAoB,aANbD,GASH,SAACE,GAAD,OAAUV,GAAIO,IAAI,eAAe,CACvCH,OAAQ,CACNO,MAAOC,mBAAmBF,OAKnBG,GACA,kBAAMb,GAAIO,IAAI,iBADdM,GAED,kBAAMb,GAAIO,IAAI,eAFbM,GAGG,kBAAMb,GAAIO,IAAI,oBAHjBM,GAIE,SAAAvC,GAAE,OAAI0B,GAAIO,IAAJ,aAAcjC,GAAK,CACpC8B,OAAQ,CACNK,mBAAoB,aANbI,GASH,SAACH,GAAD,OAAUV,GAAIO,IAAI,YAAY,CACpCH,OAAQ,CACNO,MAAOC,mBAAmBF,OCtCjBI,G,4MCIbC,MAAQ,CACN5B,WAAY,KACZC,SAAU,KACVC,QAAS,KACTC,MAAO,KACPC,SAAS,G,8FAGX,sCAAAyB,EAAA,+EAIcR,KAJd,uBAGuBrB,EAHvB,EAGM8B,KAAQC,QAHd,SAOcV,KAPd,uBAMuBpB,EANvB,EAMM6B,KAAQC,QANd,UAUcV,KAVd,iBASuBnB,EATvB,EASM4B,KAAQC,QAEVC,KAAKC,SAAS,CACZjC,aACAC,WACAC,YAdN,kDAiBI8B,KAAKC,SAAS,CACZ9B,MAAO,iCAlBb,yBAqBI6B,KAAKC,SAAS,CACZ7B,SAAS,IAtBf,6E,0EA2BA,WAAU,IAAD,EACmD4B,KAAKJ,MAAvD5B,EADD,EACCA,WAAYC,EADb,EACaA,SAAUC,EADvB,EACuBA,QAASC,EADhC,EACgCA,MAAOC,EADvC,EACuCA,QAC9C,OACE,cAAC,EAAD,CAAeJ,WAAYA,EAAYC,SAAUA,EAAUC,QAASA,EAASC,MAAOA,EAAOC,QAASA,Q,GAvC7E8B,IAAMC,WCI7B5E,GAAYC,IAAOC,IAAV,iDAwEA2E,GApEK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,YAAapC,EAA1B,EAA0BA,QAASC,EAAnC,EAAmCA,MAAOC,EAA1C,EAA0CA,QAA1C,OAClB,qCACE,cAACC,EAAA,EAAD,UACE,qDAEDD,EACC,cAAC,EAAD,IAEA,eAAC,GAAD,WACGiC,GAAYA,EAASxC,OAAS,GAC7B,cAAC,EAAD,CAAS/B,MAAM,YAAf,SACGuE,EAAS/B,KAAI,SAACiC,GAAD,OACZ,cAAC,EAAD,CAEEpD,GAAIoD,EAAGpD,GACPrB,MAAOyE,EAAGC,cACVpD,SAAUmD,EAAG9B,YACbpB,OAAQkD,EAAG7B,aACXpB,KAAMiD,EAAGE,gBAAkBF,EAAGE,eAAe3C,UAAU,EAAG,GAC1DN,SAAS,GANJ+C,EAAGpD,SAWfe,GAAWA,EAAQL,OAAS,GAC3B,cAAC,EAAD,CAAS/B,MAAM,UAAf,SACGoC,EAAQI,KAAI,SAACiC,GAAD,OACX,cAAC,EAAD,CAEEpD,GAAIoD,EAAGpD,GACPrB,MAAOyE,EAAGC,cACVpD,SAAUmD,EAAG9B,YACbpB,OAAQkD,EAAG7B,aACXpB,KAAMiD,EAAGE,gBAAkBF,EAAGE,eAAe3C,UAAU,EAAG,GAC1DN,SAAS,GANJ+C,EAAGpD,SAWfmD,GAAeA,EAAYzC,OAAS,GACnC,cAAC,EAAD,CAAS/B,MAAM,eAAf,SACGwE,EAAYhC,KAAI,SAACiC,GAAD,OACf,cAAC,EAAD,CAEEpD,GAAIoD,EAAGpD,GACPrB,MAAOyE,EAAGC,cACVpD,SAAUmD,EAAG9B,YACbpB,OAAQkD,EAAG7B,aACXpB,KAAMiD,EAAGE,gBAAkBF,EAAGE,eAAe3C,UAAU,EAAG,GAC1DN,SAAS,GANJ+C,EAAGpD,SAWfgB,GAAS,cAACS,EAAD,CAASlC,MAAM,UAAUE,KAAMuB,WCjElCuC,G,4MCIbd,MAAQ,CACNS,SAAU,KACVC,YAAa,KACbpC,QAAS,KACTC,MAAO,KACPC,SAAS,G,8FAEX,sCAAAyB,EAAA,+EAIcH,KAJd,uBAGuBW,EAHvB,EAGMP,KAAQC,QAHd,SAOcL,KAPd,uBAMuBY,EANvB,EAMMR,KAAQC,QANd,UAUcL,KAVd,iBASuBxB,EATvB,EASM4B,KAAQC,QAEVC,KAAKC,SAAS,CACZI,WACAC,cACApC,YAdN,kDAiBI8B,KAAKC,SAAS,CACZ9B,MAAO,8BAlBb,yBAqBI6B,KAAKC,SAAS,CACZ7B,SAAS,IAtBf,6E,0EA0BA,WAAU,IAAD,EACoD4B,KAAKJ,MAAxDS,EADD,EACCA,SAAUC,EADX,EACWA,YAAapC,EADxB,EACwBA,QAASC,EADjC,EACiCA,MAAOC,EADxC,EACwCA,QAC/C,OACE,cAAC,GAAD,CAAaiC,SAAUA,EAAUC,YAAaA,EAAapC,QAASA,EAASC,MAAOA,EAAOC,QAASA,Q,GArC7E8B,IAAMC,WCI7B5E,GAAYC,IAAOC,IAAV,iKASTkF,GAAOnF,IAAOoF,KAAV,sEAKJC,GAAQrF,IAAOsF,MAAV,yJAqEIC,GA7DS,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,WAAY/C,EAAxC,EAAwCA,MAAOC,EAA/C,EAA+CA,QAAS+C,EAAxD,EAAwDA,aAAcC,EAAtE,EAAsEA,WAAtE,OACtB,eAAC,GAAD,WACE,cAAC/C,EAAA,EAAD,UACE,yDAEF,cAACsC,GAAD,CAAMU,SAAUF,EAAhB,SACE,cAACN,GAAD,CAAOS,YAAY,+BAA+BC,MAAOL,EAAYM,SAAUJ,MAEhFhD,EACC,cAAC,EAAD,IAEA,qCACG4C,GAAgBA,EAAanD,OAAS,GACrC,cAAC,EAAD,CAAS/B,MAAM,gBAAf,SACGkF,EAAa1C,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEEpB,GAAIoB,EAAMpB,GACVrB,MAAOyC,EAAMC,eACbpB,SAAUmB,EAAME,YAChBpB,OAAQkB,EAAMG,aACdpB,KAAMiB,EAAMI,cAAgBJ,EAAMI,aAAab,UAAU,EAAG,GAC5DN,SAAS,GANJe,EAAMpB,SAWlB8D,GAAaA,EAAUpD,OAAS,GAC/B,cAAC,EAAD,CAAS/B,MAAM,aAAf,SACGmF,EAAU3C,KAAI,SAACiC,GAAD,OACb,cAAC,EAAD,CAEEpD,GAAIoD,EAAGpD,GACPrB,MAAOyE,EAAGC,cACVpD,SAAUmD,EAAG9B,YACbpB,OAAQkD,EAAG7B,aACXpB,KAAMiD,EAAGE,gBAAkBF,EAAGE,eAAe3C,UAAU,EAAG,GAC1DN,SAAS,GANJ+C,EAAGpD,YAanBgB,GAAS,cAACS,EAAD,CAASlC,MAAM,UAAUE,KAAMuB,IACxC8C,GAAaD,GAAwC,IAAxBA,EAAanD,QAAqC,IAArBoD,EAAUpD,QACnE,cAACe,EAAD,CAASlC,MAAM,UAAUE,KAAI,8BAAyBsE,SC3E7CO,G,4MCIb7B,MAAQ,CACNoB,aAAc,KACdC,UAAW,KACXC,WAAY,GACZ/C,MAAO,KACPC,SAAS,G,EAOX+C,aAAe,SAACO,GACdA,EAAMC,iBAEY,IADK,EAAK/B,MAApBsB,YAEN,EAAKU,gB,EAITR,WAAa,SAACM,GAAW,IAEXH,EACRG,EADFG,OAAUN,MAEZO,QAAQC,IAAIR,GACZ,EAAKtB,SAAS,CACZiB,WAAYK,K,EAIhBK,a,sBAAe,oCAAA/B,EAAA,6DACLqB,EAAe,EAAKtB,MAApBsB,WACR,EAAKjB,SAAS,CAAE7B,SAAS,IAFZ,kBAMDiB,GAAgB6B,GANf,uBAKQF,EALR,EAKTlB,KAAQC,QALC,SASDL,GAAawB,GATZ,gBAQQD,EARR,EAQTnB,KAAQC,QAEV,EAAKE,SAAS,CACZe,eACAC,cAZS,kDAeX,EAAKhB,SAAS,CACZ9B,MAAO,kCAhBE,yBAmBX,EAAK8B,SAAS,CACZ7B,SAAS,IApBA,6E,4CAwBf,WAAU,IAAD,EACqE4B,KAAKJ,MAAzEoB,EADD,EACCA,aAAcC,EADf,EACeA,UAAWC,EAD1B,EAC0BA,WAAY/C,EADtC,EACsCA,MAAOC,EAD7C,EAC6CA,QAD7C,EACsDgD,WAE7D,OADAU,QAAQC,IAAI/B,KAAKJ,OAEf,cAAC,GAAD,CACEoB,aAAcA,EACdC,UAAWA,EACXC,WAAYA,EACZ/C,MAAOA,EACPC,QAASA,EACT+C,aAAcnB,KAAKmB,aACnBC,WAAYpB,KAAKoB,iB,GAlEIlB,IAAMC,WCD7B6B,GAAaxG,IAAOyG,OAAV,kRAaVC,GAAO1G,IAAO2G,GAAV,8FAMJC,GAAO5G,IAAO6G,GAAV,iMAKmB,SAAC5F,GAAD,OAAYA,EAAM6F,QAAU,UAAY,iBAG/DC,GAAQ/G,YAAOgH,IAAPhH,CAAH,oHAyBIiH,I,2BCtDAC,GDsDAD,aAlBf,YAAwC,IAAbE,EAAY,EAAtBC,SAAUD,SACzB,OACE,cAACX,GAAD,UACE,eAACE,GAAD,WACE,cAACE,GAAD,CAAME,QAAoB,UAAXK,EAAf,SACE,cAACJ,GAAD,CAAO9E,GAAG,QAAV,oBAEF,cAAC2E,GAAD,CAAME,QAAoB,QAAXK,EAAf,SACE,cAACJ,GAAD,CAAO9E,GAAG,MAAV,kBAEF,cAAC2E,GAAD,CAAME,QAAoB,YAAXK,EAAf,SACE,cAACJ,GAAD,CAAO9E,GAAG,UAAV,8BE3CJlC,GAAYC,IAAOC,IAAV,uMAWToH,GAAWrH,IAAOC,IAAV,sSAMY,SAACgB,GAAD,OAAWA,EAAMqG,SASrCC,GAAQvH,IAAOC,IAAV,2XAGe,SAACgB,GAAD,OAAWA,EAAMqG,SAerCE,GAAUxH,IAAOC,IAAV,6JASPwH,GAAOzH,IAAOC,IAAV,yJAQJC,GAAQF,IAAOC,IAAV,uEAILyG,GAAO1G,IAAO2G,GAAV,2LAWJe,GAAW1H,IAAO2H,EAAV,oHAgDCC,GAzCS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,EAAWlF,MAAX,SAAkBC,QAEtC,qCACE,cAACC,EAAA,EAAD,UACE,yDAEF,cAAC,EAAD,OAGF,eAAC,GAAD,WACE,cAACA,EAAA,EAAD,UACE,kCAAQgF,EAAO7E,eAAiB6E,EAAO7E,eAAiB6E,EAAO7C,cAA/D,oBAEF,cAACqC,GAAD,CAAUC,MAAK,6CAAwCO,EAAOC,iBAC9D,eAACN,GAAD,WACE,cAACD,GAAD,CACED,MACEO,EAAO5E,YAAP,6CAC0C4E,EAAO5E,aAC7Cf,EAAQ,MAGhB,eAACuF,GAAD,WACE,cAAC,GAAD,UAAQI,EAAO7E,eAAiB6E,EAAO7E,eAAiB6E,EAAO7C,gBAC/D,eAAC,GAAD,WACE,6BAAK6C,EAAO1E,aAAe0E,EAAO1E,aAAab,UAAU,EAAG,GAAKuF,EAAO5C,eAAe3C,UAAU,EAAG,KACpG,+BAAKuF,EAAOE,QAAUF,EAAOE,QAAUF,EAAOG,iBAAiB,GAA/D,UACA,+BAAKH,EAAO3E,aAAZ,YACA,+CAAQ2E,EAAOI,iBAEjB,cAACP,GAAD,UAAWG,EAAOK,qBCrHbC,G,kDCIb,WAAYlH,GAAQ,IAAD,sBACjB,cAAMA,GADW,IAGHkG,EACVlG,EADFmG,SAAYD,SAHG,OAKjB,EAAK/C,MAAQ,CACXyD,OAAQ,KACRlF,MAAO,KACPC,SAAS,EACTZ,QAASmF,EAASiB,SAAS,YATZ,E,4FAanB,0CAAA/D,EAAA,2DAMMG,KAAKvD,MAHKU,EAHhB,EAEI0G,MACE5E,OAAU9B,GAED2G,EALf,EAKIC,QAAWD,KAELtG,EAAYwC,KAAKJ,MAAjBpC,QACFwG,EAAWC,SAAS9G,IACtB+G,MAAMF,GATZ,yCAUWF,EAAK,MAVhB,UAYMT,EAAS,KAZf,UAcQ7F,EAdR,kCAegC6B,GAAqB2E,GAfrD,iBAeeX,EAff,EAeSvD,KAfT,yCAiBgCJ,GAAiBsE,GAjBjD,iBAiBeX,EAjBf,EAiBSvD,KAjBT,0DAoBIE,KAAKC,SAAS,CAAE9B,MAAO,wBApB3B,yBAsBI6B,KAAKC,SAAS,CAAE7B,SAAS,EAAOiF,WAtBpC,6E,0EAyBA,WAAU,IAAD,EAC4BrD,KAAKJ,MAAhCyD,EADD,EACCA,OAAQlF,EADT,EACSA,MAAOC,EADhB,EACgBA,QACvB,OAAO,cAAC,GAAD,CAAiBiF,OAAQA,EAAQlF,MAAOA,EAAOC,QAASA,Q,GAzCtC8B,IAAMC,WCIpB,qBACb,eAAC,IAAD,CAAQgE,SAAS,aAAjB,UACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjC,cAAC,IAAD,CAAOH,KAAK,UAAUE,UAAWE,KACjC,cAAC,IAAD,CAAOJ,KAAK,MAAMC,OAAK,EAACC,UAAWG,KACnC,cAAC,IAAD,CAAOL,KAAK,aAAaE,UAAWI,KACpC,cAAC,IAAD,CAAON,KAAK,UAAUE,UAAWI,KACjC,cAAC,IAAD,CAAUC,KAAK,IAAIlH,GAAG,a,SCCbmH,GAhBMC,YAAH,mOACdC,MCWWC,G,4JAVb,WACE,OACE,qCACE,cAACC,GAAD,IACA,cAAC,GAAD,W,GALU7E,aCAlB8E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.761648cf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Container = styled.div`\r\n  margin-top:30px;\r\n  margin-left:10px;\r\n  @media screen and (max-width: 320px) {\r\n    margin-left:0;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size:20px;\r\n  line-height:30px;\r\n  font-weight:600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  display:grid;\r\n  grid-template-columns:repeat(auto-fill, 150px);\r\n  grid-gap:20px;\r\n  margin-top:20px;\r\n  @media screen and (max-width: 320px) {\r\n    grid-template-columns: auto;\r\n  }\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Loader = () => <Container>Loading...</Container>;\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  margin-top:80px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  font-weight: 600;\r\n  color: ${props => props.color};\r\n`;\r\n\r\nconst Error = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nError.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\nexport default Error;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  width: 100%;\r\n  height: 200px;\r\n  border-radius: 4px;\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\nconst Rating = styled.span`\r\n  display: block;\r\n  margin: 7px 0;\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 10px;\r\n  opacity: 0;\r\n`;\r\nconst ImageContainer = styled.div`\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.6;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin: 10px 0 4px;\r\n`;\r\nconst Year = styled.span`\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, star, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../assets/images/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐\r\n          </span>\r\n          {rating} / 10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>{title.length > 15 ? `${title.substring(0, 15)}...` : title}</Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  star: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0 10px;\r\n`;\r\nconst HomePresenter = ({ nowPlaying, upComing, popular, error, loading }) => (\r\n  <>\r\n    {\" \"}\r\n    <Helmet>\r\n      <title>Movies | Nomfilx-r</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upComing && upComing.length > 0 && (\r\n          <Section title=\"UpComing\">\r\n            {upComing.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key : \"6fe05069d5908bc6d368589e832ee0b5\",\r\n    language: \"en-US\"\r\n  }\r\n});\r\n\r\napi.get(\"tv/popular\");\r\n\r\nexport const movieApi = {\r\n  nowPlaying : () => api.get('movie/now_playing'),\r\n  upComing : () => api.get('movie/upcoming'),\r\n  popular : () => api.get('movie/popular'),\r\n  movieDetail: id => api.get(`movie/${id}`,{\r\n    params: {\r\n      append_to_response: \"videos\"\r\n    }\r\n  }),\r\n  search: (term) => api.get('search/movie',{\r\n    params: {\r\n      query: encodeURIComponent(term)\r\n    }\r\n  })\r\n}\r\n\r\nexport const tvApi = {\r\n  topRated : () => api.get('tv/top_rated'),\r\n  popular : () => api.get('tv/popular'),\r\n  airingToday : () => api.get('tv/airing_today'),\r\n  showDetail : id => api.get(`tv/${id}`,{\r\n    params: {\r\n      append_to_response: \"videos\"\r\n    }\r\n  }),\r\n  search: (term) => api.get('search/tv',{\r\n    params: {\r\n      query: encodeURIComponent(term)\r\n    }\r\n  })\r\n}\r\n\r\n\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"Routes/Home/HomePresenter\";\r\nimport { movieApi } from \"api\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upComing: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await movieApi.nowPlaying();\r\n      const {\r\n        data: { results: upComing },\r\n      } = await movieApi.upComing();\r\n      const {\r\n        data: { results: popular },\r\n      } = await movieApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upComing,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find Movie information\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upComing, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter nowPlaying={nowPlaying} upComing={upComing} popular={popular} error={error} loading={loading} />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding:0 10px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, airingToday, popular, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV | Nomfilx-r</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated\">\r\n            {topRated.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular\">\r\n            {popular.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import { tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport TVPresenter from \"Routes/TV/TVPresenter\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    airingToday: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      this.setState({\r\n        topRated,\r\n        airingToday,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const { topRated, airingToday, popular, error, loading } = this.state;\r\n    return (\r\n      <TVPresenter topRated={topRated} airingToday={airingToday} popular={popular} error={error} loading={loading} />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  margin-top: 30px;\r\n  margin-left: 10px;\r\n  @media screen and (max-width: 320px) {\r\n    margin-left:0;\r\n    padding:0 10px;\r\n  }\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 30px;\r\n  width: 100%;\r\n  @media screen and (max-width: 512px) {\r\n    font-size: 1.2rem;\r\n  } \r\n`;\r\nconst SearchPresenter = ({ movieResults, tvResults, searchTerm, error, loading, handleSubmit, updateTerm }) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Nomfilx-r</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input placeholder=\"Search Movies or TV Shows...\" value={searchTerm} onChange={updateTerm} />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Results\">\r\n            {tvResults.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n      </>\r\n    )}\r\n    {error && <Message color=\"#e74c3c\" text={error} />}\r\n    {tvResults && movieResults && movieResults.length === 0 && tvResults.length === 0 && (\r\n      <Message color=\"#95a5a6\" text={`Nothing Found for : ${searchTerm}`} />\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  searchTerm: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import { movieApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport SearchPresenter from \"Routes/Search/SearchPresenter\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    error: null,\r\n    loading: false,\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   this.handleSubmit();\r\n  // }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm != \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    console.log(value);\r\n    this.setState({\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await movieApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find result information\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, error, loading, updateTerm } = this.state;\r\n    console.log(this.state);\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst HeaderWrap = styled.header`\r\n  color: white;\r\n  position: sticky;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 80px;\r\n  display: flex;\r\n  align-item: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  box-shadow: 0 1px 10px 5px rgba(0, 0, 0, 0.9);\r\n  z-index:10;\r\n`;\r\nconst List = styled.ul`\r\n  display: flex;\r\n  &:hover {\r\n    backgrond-color: blue;\r\n  }\r\n`;\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  display:flex;\r\n  justify-content:center;\r\n  align-items:center;\r\n  border-bottom: 4px solid ${(props) => (props.current ? \"skyblue\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\nconst SLink = styled(Link)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nfunction Header({location:{pathname}}) {\r\n  return (\r\n    <HeaderWrap>\r\n      <List>\r\n        <Item current={pathname===\"/home\"}>\r\n          <SLink to=\"/home\">HOME</SLink>\r\n        </Item>\r\n        <Item current={pathname===\"/tv\"}>\r\n          <SLink to=\"/tv\">TV</SLink>\r\n        </Item>\r\n        <Item current={pathname===\"/search\"}>\r\n          <SLink to=\"/search\">SEARCH</SLink>\r\n        </Item>\r\n      </List>\r\n    </HeaderWrap>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header);","import Header from \"./Header\";\r\n\r\nexport default Header;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  width: 80%;\r\n  height: calc(100vh - 80px);\r\n  padding: 50px;\r\n  margin: 0 auto;\r\n  @media screen and (max-width: 1024px) {\r\n    width: 100%;\r\n    padding: 30px;\r\n  }\r\n`;\r\n\r\nconst BackDrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImg});\r\n  background-position: center center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  filter: blur(2px);\r\n  opacity: 0.5;\r\n  z-index: -1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  flex: 0.6;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImg});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  border-radius: 10px;\r\n  @media screen and (max-width: 1024px) {\r\n    flex: 1;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    flex: auto;\r\n    width: 40%;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  @media screen and (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst Data = styled.div`\r\n  margin-left: 50px;\r\n  margin-top: 30px;\r\n  flex: 1;\r\n  @media screen and (max-width: 768px) {\r\n    margin-left: 0;\r\n  }\r\n`;\r\nconst Title = styled.div`\r\n  font-size: 32px;\r\n  line-height: 1.4;\r\n`;\r\nconst List = styled.ul`\r\n  display: flex;\r\n  height: 40px;\r\n  align-items: center;\r\n  li {\r\n    &:not(:first-child) {\r\n      list-style: disc;\r\n      margin-left: 30px;\r\n    }\r\n  }\r\n`;\r\nconst OverView = styled.p`\r\n  font-size: 15px;\r\n  text-align: justify;\r\n  line-height: 1.5;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, loading }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loader | Nomfilx-r</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>{result.original_title ? result.original_title : result.original_name} | Nomfilx-r</title>\r\n      </Helmet>\r\n      <BackDrop bgImg={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\r\n      <Content>\r\n        <Cover\r\n          bgImg={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/images/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>{result.original_title ? result.original_title : result.original_name}</Title>\r\n          <List>\r\n            <li>{result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)}</li>\r\n            <li>{result.runtime ? result.runtime : result.episode_run_time[0]} min</li>\r\n            <li>{result.vote_average} / 10 </li>\r\n            <li>👍 {result.vote_count}</li>\r\n          </List>\r\n          <OverView>{result.overview}</OverView>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import { movieApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport DetailPresenter from \"Routes/Detail/DetailPresenter\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await movieApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Header from \"Components/Header\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () => (\r\n  <Router basename=\"/Nomflix-r\">\r\n    <Header />\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/search\" component={Search} />\r\n      <Route path=\"/tv\" exact component={TV} />\r\n      <Route path=\"/movie/:id\" component={Detail} />\r\n      <Route path=\"/tv/:id\" component={Detail} />\r\n      <Redirect from=\"*\" to=\"/\" />\r\n    </Switch>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  ${reset};\r\n  a{\r\n    text-decoration:none;\r\n    color:inherit;\r\n  }\r\n  *{\r\n    box-sizing:border-box;\r\n  }\r\n  body{\r\n    font-size:14px;\r\n    background-color:rgba(20,20,20,1);\r\n    color:white;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyles;","import React, { Component } from \"react\";\r\nimport Router from \"Components/Router\";\r\nimport GlobalStyles from \"Components/GlobalStyles\";\r\nimport \"api\";\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Router />\r\n        <GlobalStyles />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"Components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}